// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?
    expires_in        Int?
    ext_expires_in    Int?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model diesel_schema_migrations {
  version String   @id @db.VarChar(50)
  run_on  DateTime @default(now()) @db.Timestamp(0)

  @@map("__diesel_schema_migrations")
}

model bird {
  id                  Int    @id @default(autoincrement())
  name                String @db.VarChar(255)
  scientific_name     String @db.VarChar(255)
  commonwealth_status String @db.VarChar(255)
}

model bird_sighting {
  id                     Int       @id @default(autoincrement())
  bird_id                Int
  sighting_date          DateTime? @default(now()) @db.Timestamp(0)
  sighting_location      String?   @db.VarChar(255)
  additional_information String?   @db.Text
}

model job_cards {
  id            String   @id
  created_at    DateTime @default(now()) @db.DateTime(0)
  updated_at    DateTime @db.DateTime(0)
  job_name      String
  job_number    String
  card_number   String @default("")
  job_ctr       String @default("0")
  ctr           Int    @default(0)
  job_resources Int    @default(1)
  job_workshop  String
  job_status    String
  due_date      DateTime @db.DateTime(0)
  start_date    DateTime @default(now()) @db.DateTime(0)
  end_date      DateTime @default(now()) @db.DateTime(0)
  job_contact   String
  job_order     Int   @default(0)

  @@index([job_name], map: "job_name")
  @@index([job_number], map: "job_number")
}

model Resource {
    id                  String   @id
    created_at          DateTime @default(now()) @db.DateTime(0)
    updated_at          DateTime @db.DateTime(0)
    resource_name       String
    resource_role       String
    resource_skill      String
    resource_workshop   Int
    workshop            Workshop @relation(fields: [resource_workshop], references: [id])
    availability        Availability[]

    @@index([id], map: "id")
}

model Availability {
    id                  Int      @id @default(autoincrement())
    created_at          DateTime @default(now()) @db.DateTime(0)
    updated_at          DateTime @db.DateTime(0)
    resource_id         String
    resource            Resource @relation(fields: [resource_id], references: [id])
    availability_date   DateTime @db.DateTime(0)
    job_name            String
    available_hrs       Int      @default(0) 

    @@index([id], map: "id")
}

model Workshop {
    id            Int   @id
    created_at    DateTime @default(now()) @db.DateTime(0)
    updated_at    DateTime @db.DateTime(0)
    workshop_name String
    resources     Resource[]

    @@index([id], map: "id")
}
